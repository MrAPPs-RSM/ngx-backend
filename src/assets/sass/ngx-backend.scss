@import url('https://fonts.googleapis.com/css?family=Roboto:300,400,500');
@import 'partials/imports';

/* Partials */
@import 'partials/_buttons.scss';
@import 'partials/_alerts.scss';
@import 'partials/_modal.scss';
@import 'partials/_progress-bar.scss';
@import 'partials/_form.scss';
@import 'partials/_toasts.scss';

/* Externals */
@import '~dragula/dist/dragula.min.css';
@import "~@ng-select/ng-select/themes/default.theme.css";

body {
  background-color: #F1F1F1;
  font-family: 'Roboto', sans-serif;
  font-weight: $light;

  h1, h2, h3, h4, h5, h6 {
    font-weight: $regular;
  }

  a {
    cursor: pointer;
    &:hover,
    &:focus,
    &:active {
      text-decoration: none;
      @include _transition(all 0.3s);
    }
  }

  .container {
    max-width: 100%;
  }

  h1, h2, h3, h4, h5, h6, a, i, p, span, small {
    &.primary {
      color: $primary;
    }
    &.success {
      color: $success;;
    }
    &.danger {
      color: $danger;
    }
    &.info {
      color: $info;
    }
    &.warning {
      color: $warning;
    }
    &.default {
      color: $default;
    }
  }

  div.form-center {
    margin: 0 auto;
    @include _transform(translateY(50%));
    max-width: 600px;
  }

}

.ng2-smart-action {
  cursor: pointer;
  font-weight: $light;
  padding: 5px 8px;
  border: none;
  color: #ffffff !important;
  background-color: $primary;
  &:hover {
    color: #ffffff;
    background-color: darken($primary, 10);
  }
  &.success {
    background-color: $success;
    &:hover {
      background-color: darken($success, 10);
    }
  }
  &.danger {
    background-color: $danger;
    &:hover {
      background-color: darken($danger, 10);
    }
  }
  &.info {
    background-color: $info;
    &:hover {
      background-color: darken($info, 10);

    }
  }
  &.warning {
    background-color: $warning;
    &:hover {
      background-color: darken($warning, 10);
    }
  }
  &.default {
    background-color: $default;
    &:hover {
      background-color: darken($default, 10);
    }
  }

  &.disabled {
    cursor: not-allowed;
    background-color: $lightGrey;
    color: $grey;
    &:hover {
      background-color: $lightGrey;
      color: $grey;
    }
  }
}

/* Drag & Drop table
.gu-mirror {
  width: auto !important;
  position: fixed !important;
  margin: 0 !important;
  z-index: 9999 !important;
  border: 1px solid $grey;
  > td {
    text-align: center !important;
    border-bottom: 1px solid $grey;
    font-size: 14px;
    color: $default;
    font-weight: $light;
    padding: 5px 10px;
    background: #ffffff;
    width: 10%;
    &:not(:last-child) {
      border-right: 1px solid $grey;
    }

    @include respond-to(upto-sm) {
      &:last-child {
        display: none;
      }
    }

    &.ng2-smart-actions {
      > ng2-st-tbody-actions {
        > a {
          &:not(:last-child) {
            margin-right: 10px;
          }
        }
      }
    }
  }
}

.gu-hide {
  display: none !important;
}

.gu-unselectable {
  -webkit-user-select: none !important;
  -moz-user-select: none !important;
  -ms-user-select: none !important;
  user-select: none !important;
} */